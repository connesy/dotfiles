// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.openWorkspace"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "alt+left",
        "command": "cursorWordPartLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+right",
        "command": "cursorWordPartRight",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "cursorWordPartLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "cursorWordPartRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+'",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+7",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+delete",
        "command": "deleteWordPartRight",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+backspace",
        "command": "deleteWordPartLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "scrollLineDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+down",
        "command": "-scrollLineDown",
        "when": "textInputFocus"
    },
    {
        "key": "alt+up",
        "command": "scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+up",
        "command": "-scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly || notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k l",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "ctrl+k u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+k down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+k down",
        "command": "-views.moveViewDown",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k down",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+k up",
        "command": "workbench.action.splitEditorUp"
    },
    {
        "key": "ctrl+k up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+k up",
        "command": "-views.moveViewUp",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k left",
        "command": "workbench.action.splitEditorLeft"
    },
    {
        "key": "ctrl+k left",
        "command": "-views.moveViewLeft",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k right",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k right",
        "command": "-views.moveViewRight",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+alt+[Minus]",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "shift+f9",
        "command": "editor.debug.action.conditionalBreakpoint"
    },
    {
        "key": "shift+f9",
        "command": "-editor.debug.action.toggleInlineBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "-editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "python.debugTestNode"
    },
    {
        "key": "ctrl+shift+d",
        "command": "workbench.view.debug",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "ctrl+space",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+shift+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "shift+enter",
        "command": "editor.debug.action.selectionToRepl",
        "when": "editorTextFocus && inDebugMode && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+shift+[Comma] x",
        "command": "testing.reRunFailTests"
    },
    {
        "key": "ctrl+shift+[Comma] e",
        "command": "-testing.reRunFailTests"
    },
    {
        "key": "ctrl+shift+[Quote]",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+[Semicolon]",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "ctrl+k e",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+shift+[BracketRight]",
        "command": "workbench.action.debug.callStackUp",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+shift+[BracketLeft]",
        "command": "workbench.action.debug.callStackDown",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-continue.suggestionDown"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-continue.suggestionUp"
    },
    {
        "key": "ctrl+shift+j",
        "command": "continue.quickTextEntry",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-continue.quickTextEntry"
    }
]
